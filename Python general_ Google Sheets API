{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1rAjg2zQMWiASH_2mRmFve3GGCCRZaNd5","timestamp":1746700941204}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## 2 кейс\n","\n","**Соберите данные из Google Sheets и напишите функцию `generate_report`, которая принимает три списка (данные с каждого листа в Google Sheets) и сохраняет отчет в файл `student_debt_report.txt`**"],"metadata":{"id":"kilnMAFvwPlm"}},{"cell_type":"markdown","source":["**Важно**\n","\n","Перед началом решения задачи выполните следующую ячейку - в ней скачиваются нужные файлы"],"metadata":{"id":"Ese_hT_YwxHw"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"84h9WDU8ngRf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747031054293,"user_tz":-240,"elapsed":723,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"48026cd4-ef53-42f7-d150-bc829080d29e"},"outputs":[{"output_type":"stream","name":"stdout","text":["--2025-05-12 06:24:13--  https://gist.github.com/Vs8th/d0bd4bdbbb58c8ae4f70a2a503e2d5fc/raw/creds.json\n","Resolving gist.github.com (gist.github.com)... 140.82.116.3\n","Connecting to gist.github.com (gist.github.com)|140.82.116.3|:443... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: https://gist.githubusercontent.com/Vs8th/d0bd4bdbbb58c8ae4f70a2a503e2d5fc/raw/creds.json [following]\n","--2025-05-12 06:24:13--  https://gist.githubusercontent.com/Vs8th/d0bd4bdbbb58c8ae4f70a2a503e2d5fc/raw/creds.json\n","Resolving gist.githubusercontent.com (gist.githubusercontent.com)... 185.199.111.133, 185.199.108.133, 185.199.110.133, ...\n","Connecting to gist.githubusercontent.com (gist.githubusercontent.com)|185.199.111.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 2358 (2.3K) [text/plain]\n","Saving to: ‘creds.json’\n","\n","creds.json          100%[===================>]   2.30K  --.-KB/s    in 0s      \n","\n","2025-05-12 06:24:13 (36.6 MB/s) - ‘creds.json’ saved [2358/2358]\n","\n","--2025-05-12 06:24:13--  https://gist.github.com/Vs8th/39c5deed0f5539d781f00328f7fd4fe0/raw/result.txt\n","Resolving gist.github.com (gist.github.com)... 140.82.116.4\n","Connecting to gist.github.com (gist.github.com)|140.82.116.4|:443... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: https://gist.githubusercontent.com/Vs8th/39c5deed0f5539d781f00328f7fd4fe0/raw/result.txt [following]\n","--2025-05-12 06:24:14--  https://gist.githubusercontent.com/Vs8th/39c5deed0f5539d781f00328f7fd4fe0/raw/result.txt\n","Resolving gist.githubusercontent.com (gist.githubusercontent.com)... 185.199.111.133, 185.199.108.133, 185.199.109.133, ...\n","Connecting to gist.githubusercontent.com (gist.githubusercontent.com)|185.199.111.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 198 [text/plain]\n","Saving to: ‘result.txt’\n","\n","result.txt          100%[===================>]     198  --.-KB/s    in 0s      \n","\n","2025-05-12 06:24:14 (9.87 MB/s) - ‘result.txt’ saved [198/198]\n","\n"]}],"source":["!wget https://gist.github.com/Vs8th/d0bd4bdbbb58c8ae4f70a2a503e2d5fc/raw/creds.json\n","\n","!wget https://gist.github.com/Vs8th/39c5deed0f5539d781f00328f7fd4fe0/raw/result.txt"]},{"cell_type":"markdown","source":["Чтобы посмотреть как выглядят сами гугл таблицы в оригинале - можете перейти по [ссылке](https://docs.google.com/spreadsheets/d/1hRnw-PEftF0J-6KY7InlILVwWdkJu4vJiGwRjuE_P4U/edit?usp=sharing) и изучить."],"metadata":{"id":"4DrLBsjgxAEA"}},{"cell_type":"markdown","source":["Небольшое описание столбцов в таблицах:  \n","**Лист1:** `student_id` - айди студента; `student_name` - имя студента; `installment` (Y/N) - факт наличия рассрочки у студента (Y - рассрочка есть, N - рассрочки нет).  \n","**Лист2:** `student_id` - айди студента; `last_payment_date` - дата последней полученной оплаты; `expected_payment_date` - дата, в которую ожидаем следующий платеж (рассчитывается от даты последнего платежа).  \n","**Лист3:** `student_id` - айди студента; `already_payed_amount` - уже выплаченная часть рассрочки; `left_to_pay` - оставшаяся (невыплаченная) часть; `one-time_payment` - единоразовый платеж; `installment_amount` - общая сумма, которая бралась в рассрочку."],"metadata":{"id":"n9JJRgd4xLC7"}},{"cell_type":"markdown","source":["Как примерно должен выглядеть результат:"],"metadata":{"id":"DzT-pVSOxDKF"}},{"cell_type":"code","source":["with open('result.txt') as f:\n","  print(f.read())"],"metadata":{"id":"yvYYOXrBxChi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747031057657,"user_tz":-240,"elapsed":49,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"7b052180-c2d8-4ff7-d00b-003d82e5cf4e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Студент Иванов У.У. - долг 100000 рублей\n","Студент Петров Е.Е. - долг 250000 рублей\n","Студент Сидоров И.И. - долг 10000 рублей\n"]}]},{"cell_type":"code","source":["#@title Если возникнут трудности с определением `scope`, подсказка:\n","\n","scope = ['https://www.googleapis.com/auth/spreadsheets.readonly',\n","         'https://www.googleapis.com/auth/drive']"],"metadata":{"id":"SOZfpY8OnJGl"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Примечание**\n","\n","Считать должников необходимо на 1 марта 2023 года. То есть определяя количество просроченных платежей, мы определяем их количество не на настоящую дату, а на **1 марта 2023 года**. А периоды внесения платежей для всех студентов одинаковы - **6 месяцев** (183 дня).\n","\n","То есть, если ожидаемый платеж должен был пройти 3 февраля 2022 года, то к 1 марта 2023 студент просрочил уже три платежа (3 февраля 2022, 3 августа 2022 и 3 февраля 2023). При расчетах отталкивайтесь от последнего, фактически проведенного платежа, разницу между платежами берите 183 дня."],"metadata":{"id":"gJh58XYTk181"}},{"cell_type":"markdown","source":["**Решение**\n","\n","Напишите свое решение ниже"],"metadata":{"id":"zvpm-3CmxH5l"}},{"cell_type":"code","source":["import gspread\n","from oauth2client.service_account import ServiceAccountCredentials\n","import datetime as dt\n","import os\n","# Указываем необходимые права доступа к таблицам\n","scope = ['https://www.googleapis.com/auth/spreadsheets.readonly',\n","         'https://www.googleapis.com/auth/drive']\n","# Загружаем ключи аутентификации из файла json\n","creds = ServiceAccountCredentials.from_json_keyfile_name('creds.json', scope)\n","# Авторизуемся в Google Sheets API\n","client = gspread.authorize(creds)\n","sheet1 = client.open(\"Installments\").sheet1\n","sheet2 = client.open(\"Installments\").get_worksheet(1)\n","sheet3 = client.open(\"Installments\").get_worksheet(2)\n","\n","def generate_report(sheet1, sheet2, sheet3):\n","    sheet1_data = sheet1.get_all_records()\n","    sheet2_data = sheet2.get_all_records()\n","    sheet3_data = sheet3.get_all_records()\n","    total_payment = 0\n","    combined_data = {}\n","    list_of_students = {}\n","    target_date = dt.datetime.strptime('01.03.2023', '%d.%m.%Y')\n","    for sheet_data in [sheet1_data, sheet2_data, sheet3_data]:\n","        for row in sheet_data:\n","            student_id = row['student_id']\n","            if student_id not in combined_data:\n","                combined_data[student_id] = {}\n","            combined_data[student_id].update(row)\n","    filtered_data = {}\n","    for student_id, data in combined_data.items():\n","        if data.get('installment') == 'Y' and data.get('expected_payment_date'):\n","            try:\n","                expected_payment_date = dt.datetime.strptime(data.get('expected_payment_date'), '%d.%m.%Y')\n","                if expected_payment_date < target_date:\n","                    filtered_data[student_id] = data\n","            except ValueError:\n","                pass # Skip if date format is incorrect\n","    for student_id, data in filtered_data.items():\n","        if data.get('last_payment_date'):\n","            try:\n","                last_payment_date = dt.datetime.strptime(data.get('last_payment_date'), '%d.%m.%Y')\n","                expected_payment_date = dt.datetime.strptime(data.get('expected_payment_date'), '%d.%m.%Y')\n","                payments_left = int(((target_date - expected_payment_date).days // 183)+1)\n","\n","                # Calculate payments_expired\n","                if payments_left * data.get('one-time_payment', 0) <= data.get('left_to_pay', 0):\n","                    payments_expired = payments_left * data.get('one-time_payment', 0)\n","                else:\n","                    payments_expired = data.get('left_to_pay', 0)\n","\n","                # Update the dictionary\n","                data['payments_left'] = payments_left\n","                data['payments_expired'] = payments_expired\n","            except ValueError:\n","                pass # Skip if date format is incorrect\n","    with open('student_debt_report.txt', 'w') as f:\n","        # Iterate through filtered_data, excluding the last item\n","        for student_id, data in list(filtered_data.items())[:-1]:  # Exclude last item\n","            student_name = data.get('student_name')\n","            payments_expired = data.get('payments_expired', 0)\n","            f.write(f\"Студент {student_name} - долг {payments_expired} рублей\\n\")\n","\n","        # Write the last item without adding an extra newline\n","        if filtered_data:  # Check if filtered_data is not empty\n","            last_student_id, last_data = list(filtered_data.items())[-1]\n","            last_student_name = last_data.get('student_name')\n","            last_payments_expired = last_data.get('payments_expired', 0)\n","            f.write(f\"Студент {last_student_name} - долг {last_payments_expired} рублей\")\n","    return filtered_data\n","filtered_student_data = generate_report(sheet1, sheet2, sheet3)\n"],"metadata":{"id":"CFDewPXwxLoX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["user_answer = pd.read_csv('student_debt_report.txt')\n","user_answer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"-w_iR2w4iC8G","executionInfo":{"status":"ok","timestamp":1747040471013,"user_tz":-240,"elapsed":108,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"e3146177-f4cb-4a48-de3f-94e483fc685d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Студент Кузнецова К.А. - долг 266666 рублей\n","0       Студент Петров К.А. - долг 66666 рублей\n","1      Студент Иванов А.А. - долг 100000 рублей\n","2      Студент Иванов П.П. - долг 116666 рублей\n","3      Студент Петров И.И. - долг 116666 рублей\n","4       Студент Петров А.А. - долг 16666 рублей\n","..                                          ...\n","160   Студент Сидоров А.А. - долг 266666 рублей\n","161     Студент Иванов М.А. - долг 25000 рублей\n","162    Студент Иванов М.А. - долг 387227 рублей\n","163  Студент Николаева М.А. - долг 33333 рублей\n","164   Студент Сидоров П.П. - долг 333333 рублей\n","\n","[165 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-669b2e4c-ecf9-4295-adb8-1680b4f9d541\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Студент Кузнецова К.А. - долг 266666 рублей</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Студент Петров К.А. - долг 66666 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Студент Иванов А.А. - долг 100000 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Студент Иванов П.П. - долг 116666 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Студент Петров И.И. - долг 116666 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Студент Петров А.А. - долг 16666 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>160</th>\n","      <td>Студент Сидоров А.А. - долг 266666 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>161</th>\n","      <td>Студент Иванов М.А. - долг 25000 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>162</th>\n","      <td>Студент Иванов М.А. - долг 387227 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>163</th>\n","      <td>Студент Николаева М.А. - долг 33333 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>Студент Сидоров П.П. - долг 333333 рублей</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>165 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-669b2e4c-ecf9-4295-adb8-1680b4f9d541')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-669b2e4c-ecf9-4295-adb8-1680b4f9d541 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-669b2e4c-ecf9-4295-adb8-1680b4f9d541');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-00bcd4c5-9f87-45cb-8dc1-de0b505c8c91\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-00bcd4c5-9f87-45cb-8dc1-de0b505c8c91')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-00bcd4c5-9f87-45cb-8dc1-de0b505c8c91 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_e4168f78-2796-4985-ba48-09fb837f5023\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('user_answer')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e4168f78-2796-4985-ba48-09fb837f5023 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('user_answer');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"user_answer","summary":"{\n  \"name\": \"user_answer\",\n  \"rows\": 165,\n  \"fields\": [\n    {\n      \"column\": \"\\u0421\\u0442\\u0443\\u0434\\u0435\\u043d\\u0442 \\u041a\\u0443\\u0437\\u043d\\u0435\\u0446\\u043e\\u0432\\u0430 \\u041a.\\u0410. - \\u0434\\u043e\\u043b\\u0433 266666 \\u0440\\u0443\\u0431\\u043b\\u0435\\u0439\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 154,\n        \"samples\": [\n          \"\\u0421\\u0442\\u0443\\u0434\\u0435\\u043d\\u0442 \\u041f\\u0435\\u0442\\u0440\\u043e\\u0432 \\u0418.\\u0418. - \\u0434\\u043e\\u043b\\u0433 16666 \\u0440\\u0443\\u0431\\u043b\\u0435\\u0439\",\n          \"\\u0421\\u0442\\u0443\\u0434\\u0435\\u043d\\u0442 \\u041f\\u0435\\u0442\\u0440\\u043e\\u0432 \\u0418.\\u0418. - \\u0434\\u043e\\u043b\\u0433 83333 \\u0440\\u0443\\u0431\\u043b\\u0435\\u0439\",\n          \"\\u0421\\u0442\\u0443\\u0434\\u0435\\u043d\\u0442 \\u041d\\u0438\\u043a\\u043e\\u043b\\u0430\\u0435\\u0432\\u0430 \\u041c.\\u0410. - \\u0434\\u043e\\u043b\\u0433 33333 \\u0440\\u0443\\u0431\\u043b\\u0435\\u0439\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["correct_answer = pd.read_csv('student_debt.txt')\n","correct_answer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"6Pz0cUUnul2Y","executionInfo":{"status":"ok","timestamp":1747040508822,"user_tz":-240,"elapsed":82,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"7cc6a48d-841b-42c7-f966-8ded7470f207"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Студент Кузнецова К.А. - долг 266666 рублей\n","0       Студент Петров К.А. - долг 66666 рублей\n","1      Студент Иванов А.А. - долг 100000 рублей\n","2      Студент Иванов П.П. - долг 116666 рублей\n","3      Студент Петров И.И. - долг 116666 рублей\n","4       Студент Петров А.А. - долг 16666 рублей\n","..                                          ...\n","160   Студент Сидоров А.А. - долг 266666 рублей\n","161     Студент Иванов М.А. - долг 25000 рублей\n","162    Студент Иванов М.А. - долг 387227 рублей\n","163  Студент Николаева М.А. - долг 33333 рублей\n","164   Студент Сидоров П.П. - долг 333333 рублей\n","\n","[165 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-3b3aff49-a377-4683-b574-0706ecfb8060\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Студент Кузнецова К.А. - долг 266666 рублей</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Студент Петров К.А. - долг 66666 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Студент Иванов А.А. - долг 100000 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Студент Иванов П.П. - долг 116666 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Студент Петров И.И. - долг 116666 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Студент Петров А.А. - долг 16666 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>160</th>\n","      <td>Студент Сидоров А.А. - долг 266666 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>161</th>\n","      <td>Студент Иванов М.А. - долг 25000 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>162</th>\n","      <td>Студент Иванов М.А. - долг 387227 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>163</th>\n","      <td>Студент Николаева М.А. - долг 33333 рублей</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>Студент Сидоров П.П. - долг 333333 рублей</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>165 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b3aff49-a377-4683-b574-0706ecfb8060')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3b3aff49-a377-4683-b574-0706ecfb8060 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3b3aff49-a377-4683-b574-0706ecfb8060');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-f89e5ca4-afa1-46fc-984d-447ad35c518e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f89e5ca4-afa1-46fc-984d-447ad35c518e')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-f89e5ca4-afa1-46fc-984d-447ad35c518e button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_4a77e65a-77da-413e-a53a-abe1634d5e72\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('correct_answer')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4a77e65a-77da-413e-a53a-abe1634d5e72 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('correct_answer');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"correct_answer","summary":"{\n  \"name\": \"correct_answer\",\n  \"rows\": 165,\n  \"fields\": [\n    {\n      \"column\": \"\\u0421\\u0442\\u0443\\u0434\\u0435\\u043d\\u0442 \\u041a\\u0443\\u0437\\u043d\\u0435\\u0446\\u043e\\u0432\\u0430 \\u041a.\\u0410. - \\u0434\\u043e\\u043b\\u0433 266666 \\u0440\\u0443\\u0431\\u043b\\u0435\\u0439\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 154,\n        \"samples\": [\n          \"\\u0421\\u0442\\u0443\\u0434\\u0435\\u043d\\u0442 \\u041f\\u0435\\u0442\\u0440\\u043e\\u0432 \\u0418.\\u0418. - \\u0434\\u043e\\u043b\\u0433 16666 \\u0440\\u0443\\u0431\\u043b\\u0435\\u0439\",\n          \"\\u0421\\u0442\\u0443\\u0434\\u0435\\u043d\\u0442 \\u041f\\u0435\\u0442\\u0440\\u043e\\u0432 \\u0418.\\u0418. - \\u0434\\u043e\\u043b\\u0433 83333 \\u0440\\u0443\\u0431\\u043b\\u0435\\u0439\",\n          \"\\u0421\\u0442\\u0443\\u0434\\u0435\\u043d\\u0442 \\u041d\\u0438\\u043a\\u043e\\u043b\\u0430\\u0435\\u0432\\u0430 \\u041c.\\u0410. - \\u0434\\u043e\\u043b\\u0433 33333 \\u0440\\u0443\\u0431\\u043b\\u0435\\u0439\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":56}]},{"cell_type":"markdown","source":["✏️ ✏️ ✏️\n","\n","**Проверка**\n","\n","Чтобы проверить свое решение, запустите код в следующих ячейках"],"metadata":{"id":"VSZxSfjWxeZr"}},{"cell_type":"code","source":["# Здесь будет скачиваться файл с эталонным ответом\n","\n","!wget https://gist.github.com/Vs8th/63832f093f4db8d8b251ba5d39571f3d/raw/student_debt.txt\n","\n","import pandas as pd\n","\n","user_answer = pd.read_csv('student_debt_report.txt', header=None, names=['data'], index_col=0)\n","correct_answer = pd.read_csv('student_debt.txt', header=None, names=['data'], index_col=0)"],"metadata":{"id":"nbDL6rllxe4X","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747040678338,"user_tz":-240,"elapsed":320,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"7176f0d4-cb9c-4f15-f4f9-b8d358cae35d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["--2025-05-12 09:04:37--  https://gist.github.com/Vs8th/63832f093f4db8d8b251ba5d39571f3d/raw/student_debt.txt\n","Resolving gist.github.com (gist.github.com)... 140.82.116.4\n","Connecting to gist.github.com (gist.github.com)|140.82.116.4|:443... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: https://gist.githubusercontent.com/Vs8th/63832f093f4db8d8b251ba5d39571f3d/raw/student_debt.txt [following]\n","--2025-05-12 09:04:38--  https://gist.githubusercontent.com/Vs8th/63832f093f4db8d8b251ba5d39571f3d/raw/student_debt.txt\n","Resolving gist.githubusercontent.com (gist.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n","Connecting to gist.githubusercontent.com (gist.githubusercontent.com)|185.199.108.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 11325 (11K) [text/plain]\n","Saving to: ‘student_debt.txt.2’\n","\n","student_debt.txt.2  100%[===================>]  11.06K  --.-KB/s    in 0s      \n","\n","2025-05-12 09:04:38 (75.7 MB/s) - ‘student_debt.txt.2’ saved [11325/11325]\n","\n"]}]},{"cell_type":"code","source":["try:\n","  assert (user_answer == correct_answer).all().all(), 'Ответы не совпадают'\n","  assert user_answer.columns.equals(correct_answer.columns), 'Названия столбцов не совпадают'\n","except Exception as err:\n","  raise AssertionError(f'При проверке возникла ошибка {repr(err)}')\n","else:\n","  print('Поздравляем, Вы справились и успешно прошли все проверки!!')"],"metadata":{"id":"gMqsbz7Wxm-G","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747040684823,"user_tz":-240,"elapsed":56,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"be2730bf-e52d-464f-ae27-30d04f428e6b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились и успешно прошли все проверки!!\n"]}]}]}
{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1oWZzqudlf9lVSj5Xf1VkCq0J5dux-2Ag","timestamp":1747041429645}],"collapsed_sections":["s2g2hxfMzqLo","TbkdEVLI0Cor","wxkhEVmF0PAo","OrwoZ-wR0jJq"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## 3 кейс\n","\n","Вам будет необходимо проанализировать активность пользователей платформы. В одном csv файле будет user_id и дата входа на платформу - entry_date, а в другом user_id и дата регистрации на платформе - registration_date. Ваша задача в том, чтобы провести настоящий большой анализ и рассчитать несколько ключевых метрик.\n","\n","**В этом кейсе вы будете рассчитывать:**\n","* retention\n","* rolling retention\n","* lifetime\n","* churn rate\n","* mau\n","* wau\n","* dau"],"metadata":{"id":"T_xBU6WvyPhY"}},{"cell_type":"markdown","source":["**Важно**\n","\n","Перед началом решения задачи выполните следующую ячейку - в ней скачиваются нужные файлы"],"metadata":{"id":"U2D5zGSdzc92"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"3eJFMuMpyCp-","executionInfo":{"status":"ok","timestamp":1747120431652,"user_tz":-240,"elapsed":616,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"e7caaf5c-91b4-4cd0-a0de-9e4c0ca74a36","colab":{"base_uri":"https://localhost:8080/"},"collapsed":true},"outputs":[{"output_type":"stream","name":"stdout","text":["--2025-05-13 07:13:51--  https://gist.github.com/Vs8th/739269a03f2f4a7396d04d6739da3771/raw/registrations.csv\n","Resolving gist.github.com (gist.github.com)... 140.82.114.4\n","Connecting to gist.github.com (gist.github.com)|140.82.114.4|:443... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: https://gist.githubusercontent.com/Vs8th/739269a03f2f4a7396d04d6739da3771/raw/registrations.csv [following]\n","--2025-05-13 07:13:51--  https://gist.githubusercontent.com/Vs8th/739269a03f2f4a7396d04d6739da3771/raw/registrations.csv\n","Resolving gist.githubusercontent.com (gist.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.108.133, ...\n","Connecting to gist.githubusercontent.com (gist.githubusercontent.com)|185.199.109.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 14918 (15K) [text/plain]\n","Saving to: ‘registrations.csv.1’\n","\n","\rregistrations.csv.1   0%[                    ]       0  --.-KB/s               \rregistrations.csv.1 100%[===================>]  14.57K  --.-KB/s    in 0s      \n","\n","2025-05-13 07:13:51 (120 MB/s) - ‘registrations.csv.1’ saved [14918/14918]\n","\n","--2025-05-13 07:13:51--  https://gist.github.com/Vs8th/aacb80595d1d6aaa2e31eb735f8bc644/raw/entries.csv\n","Resolving gist.github.com (gist.github.com)... 140.82.114.4\n","Connecting to gist.github.com (gist.github.com)|140.82.114.4|:443... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: https://gist.githubusercontent.com/Vs8th/aacb80595d1d6aaa2e31eb735f8bc644/raw/entries.csv [following]\n","--2025-05-13 07:13:51--  https://gist.githubusercontent.com/Vs8th/aacb80595d1d6aaa2e31eb735f8bc644/raw/entries.csv\n","Resolving gist.githubusercontent.com (gist.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n","Connecting to gist.githubusercontent.com (gist.githubusercontent.com)|185.199.108.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 308588 (301K) [text/plain]\n","Saving to: ‘entries.csv.1’\n","\n","entries.csv.1       100%[===================>] 301.36K  --.-KB/s    in 0.004s  \n","\n","2025-05-13 07:13:51 (67.8 MB/s) - ‘entries.csv.1’ saved [308588/308588]\n","\n","--2025-05-13 07:13:51--  https://gist.github.com/Vs8th/0e827e9a608117345dd6585ab81e8c86/raw/metrics.txt\n","Resolving gist.github.com (gist.github.com)... 140.82.114.4\n","Connecting to gist.github.com (gist.github.com)|140.82.114.4|:443... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: https://gist.githubusercontent.com/Vs8th/0e827e9a608117345dd6585ab81e8c86/raw/metrics.txt [following]\n","--2025-05-13 07:13:51--  https://gist.githubusercontent.com/Vs8th/0e827e9a608117345dd6585ab81e8c86/raw/metrics.txt\n","Resolving gist.githubusercontent.com (gist.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n","Connecting to gist.githubusercontent.com (gist.githubusercontent.com)|185.199.108.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 67 [text/plain]\n","Saving to: ‘metrics.txt.1’\n","\n","metrics.txt.1       100%[===================>]      67  --.-KB/s    in 0s      \n","\n","2025-05-13 07:13:51 (1.71 MB/s) - ‘metrics.txt.1’ saved [67/67]\n","\n"]}],"source":["!wget https://gist.github.com/Vs8th/739269a03f2f4a7396d04d6739da3771/raw/registrations.csv\n","\n","!wget https://gist.github.com/Vs8th/aacb80595d1d6aaa2e31eb735f8bc644/raw/entries.csv\n","\n","!wget https://gist.github.com/Vs8th/0e827e9a608117345dd6585ab81e8c86/raw/metrics.txt"]},{"cell_type":"markdown","source":["Файлами для работы являются `registrations.csv` и `entries.csv`. В них хранятся данные о регистрациях пользователей и входа на платформу соответственно."],"metadata":{"id":"vnMFicli7Fa7"}},{"cell_type":"markdown","source":["### **Посчитайте Retention 15 дня (в процентах) для пользователей, зарегистрированных в январе**\n","\n","Cохраните результат в переменную `retention_15_day`\n","\n","**Примечание:** результат округлите до 5 знаков после запятой"],"metadata":{"id":"s2g2hxfMzqLo"}},{"cell_type":"code","source":["import csv\n","from datetime import datetime as dt\n","\n","jan = '2021-01-31'\n","IDS = 0\n","DATES_REG = 1\n","users = [[],[]]\n","\n","with open('registrations.csv', newline='\\n') as f:\n","    reader_f_regs = csv.DictReader(f, delimiter=';')\n","\n","    for user in reader_f_regs:\n","        if user['registration_date'] <= jan:\n","            users[IDS].append(user['user_id'])\n","            users[DATES_REG].append(dt.strptime(user['registration_date'], '%Y-%m-%d'))\n","\n","total_cohort = len(users[IDS])\n","\n","with open('entries.csv', newline='\\n') as f:\n","    reader_f_entries = csv.DictReader(f, delimiter=';')\n","\n","    entried_15 = 0\n","\n","    for user in reader_f_entries:\n","        try :\n","            idx = users[IDS].index(user['user_id'])\n","            if (dt.strptime(user['entry_date'], '%Y-%m-%d') - users[DATES_REG][idx]).days == 15 :\n","                users[IDS].pop(idx)\n","                users[DATES_REG].pop(idx)\n","                entried_15 += 1\n","\n","        except ValueError :\n","            continue\n","\n","retention_15_day = round(100*entried_15 / total_cohort, 5)\n","print(total_cohort, entried_15, retention_15_day)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HezuNX8y4GRF","executionInfo":{"status":"ok","timestamp":1747120488519,"user_tz":-240,"elapsed":70,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"34e69cfe-af70-494b-bbbc-0408b4986336"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["86 47 54.65116\n"]}]},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","# Открываем файл с правильными ответами\n","with open('metrics.txt', 'r') as f:\n","    answers = f.read().split('\\n')\n","\n","correct_answer = float(answers[0])\n","\n","try:\n","    assert retention_15_day == correct_answer\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"id":"YGydKAis0Ae9","colab":{"base_uri":"https://localhost:8080/"},"cellView":"form","executionInfo":{"status":"ok","timestamp":1747120495452,"user_tz":-240,"elapsed":7,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"4ce453b6-255c-43b7-88c7-e5a77db0623e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]},{"cell_type":"markdown","source":["### **Посчитайте Rolling-retention 30 дня (в процентах) для пользователей из той же когорты**\n","\n","Сохраните результат в переменную `rolling_retention`\n","\n","**Примечание:** результат округлите до 5 знаков после запятой"],"metadata":{"id":"TbkdEVLI0Cor"}},{"cell_type":"code","source":["import csv\n","from datetime import datetime as dt\n","\n","jan = '2021-01-31'\n","IDS = 0\n","DATES_REG = 1\n","users = [[],[]]\n","\n","with open('registrations.csv', newline='\\n') as f:\n","    reader_f_regs = csv.DictReader(f, delimiter=';')\n","\n","    for user in reader_f_regs:\n","        if user['registration_date'] <= jan:\n","            users[IDS].append(user['user_id'])\n","            users[DATES_REG].append(dt.strptime(user['registration_date'], '%Y-%m-%d'))\n","\n","total_cohort = len(users[IDS])\n","\n","with open('entries.csv', newline='\\n') as f:\n","    reader_f_entries = csv.DictReader(f, delimiter=';')\n","\n","    entried_30 = 0\n","\n","    for user in reader_f_entries:\n","        try :\n","            idx = users[IDS].index(user['user_id'])\n","            if (dt.strptime(user['entry_date'], '%Y-%m-%d') - users[DATES_REG][idx]).days >= 30 :\n","                users[IDS].pop(idx)\n","                users[DATES_REG].pop(idx)\n","                entried_30 += 1\n","\n","        except ValueError :\n","            continue\n","\n","rolling_retention = round(100*entried_30 / total_cohort, 5)\n","print(total_cohort, entried_30, rolling_retention)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747120545467,"user_tz":-240,"elapsed":44,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"b5034ffb-b9eb-4463-f766-193eb37028b0","id":"i3Oz0_BI59BR"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["86 25 29.06977\n"]}]},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","correct_answer = float(answers[1])\n","\n","try:\n","    assert rolling_retention == correct_answer\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"cellView":"form","id":"fTwUwQZ40JCl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747120552233,"user_tz":-240,"elapsed":10,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"82311a19-1755-481d-8dbd-a4ef188b7114"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]},{"cell_type":"markdown","source":["### **Посчитайте Lifetime по всем пользователям, посчитанный как интеграл от n-day retention**\n","\n","Сохраните результат в переменную `lifetime`\n","\n","**Примечание:** результат округлите до 5 знаков после запятой"],"metadata":{"id":"wxkhEVmF0PAo"}},{"cell_type":"code","source":["# Ваше решение\n","from datetime import date, timedelta, datetime\n","\n","with open('registrations.csv', 'r') as reg:\n","  regist = reg.readlines() # читаем регистрации\n","  regist.pop(0)\n","  reg_dict = {}\n","\n","  for i in regist:\n","    reg_dict[int(i.split(';')[0])] = datetime.strptime(i.split(';')[1][:10], '%Y-%m-%d').date()\n","\n","with open('entries.csv', 'r') as ent:\n","  entries = ent.readlines()\n","  entries.pop(0)\n","  ent_list = []\n","\n","for i in entries:\n","  ent_list.append([int(i.split(';')[0]), datetime.strptime(i.split(';')[1][:10], '%Y-%m-%d').date()])\n","# отсюда мне значительно помогает Chat GPT\n","ent_list_unq = list(set(tuple(entry) for entry in ent_list))\n","user_retention_days = {}\n","\n","for user_id, entry_date in ent_list_unq:\n","  if user_id in reg_dict:\n","    delta_days = (entry_date - reg_dict[user_id]).days\n","    if user_id not in user_retention_days:\n","      user_retention_days[user_id] = []\n","    user_retention_days[user_id].append(delta_days)\n","\n","max_days = max(max(days) for days in user_retention_days.values()) # определяем максимальный n-day\n","n_day_active_users = {day: 0 for day in range(max_days + 1)} # создаем шаблон словаря\n","\n","for days in user_retention_days.values(): # добавляем кол-во активных пользователей к дням. счётчик\n","    for day in days:\n","        n_day_active_users[day] += 1\n","\n","n_day_retention = {day: n_day_active_users[day] / len(reg_dict) for day in n_day_active_users}\n","\n","lifetime = sum(n_day_retention.values())\n","\n","lifetime = round(lifetime, 5)\n","print(lifetime)\n"],"metadata":{"id":"KS17l5Ux0UD3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747120556777,"user_tz":-240,"elapsed":171,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"e0f570f9-8b19-4639-ee8e-c3ca74f851d0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["14.804\n"]}]},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","correct_answer = float(answers[2])\n","\n","try:\n","    assert lifetime == correct_answer\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"cellView":"form","id":"k7s0V8hF0Vmx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747120560685,"user_tz":-240,"elapsed":8,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"8fdc47df-8927-4112-e49b-58e7aef64d90"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]},{"cell_type":"markdown","source":["### **Посчитайте Churn rate 29 дня (в долях), посчитанный по всем пользователям**\n","\n","Сохраните результат в переменную `churn_29`"],"metadata":{"id":"OrwoZ-wR0jJq"}},{"cell_type":"code","source":["import csv\n","from datetime import datetime as dt\n","\n","IDS = 0\n","DATES_REG = 1\n","users = [[],[]]\n","\n","with open('registrations.csv', newline='\\n') as f:\n","    reader_f_regs = csv.DictReader(f, delimiter=';')\n","\n","    for user in reader_f_regs:\n","      users[IDS].append(user['user_id'])\n","      users[DATES_REG].append(dt.strptime(user['registration_date'], '%Y-%m-%d'))\n","\n","total_cohort = len(users[IDS])\n","\n","with open('entries.csv', newline='\\n') as f:\n","    reader_f_entries = csv.DictReader(f, delimiter=';')\n","\n","    entried_29 = 0\n","\n","    for user in reader_f_entries:\n","        try :\n","            idx = users[IDS].index(user['user_id'])\n","            if (dt.strptime(user['entry_date'], '%Y-%m-%d') - users[DATES_REG][idx]).days >= 29:\n","                users[IDS].pop(idx)\n","                users[DATES_REG].pop(idx)\n","                entried_29 += 1\n","\n","        except ValueError :\n","            continue\n","\n","churn_29 = 1 - (entried_29 / total_cohort)\n","print(total_cohort, entried_29, churn_29)"],"metadata":{"id":"hKN7vidq0mJ3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747121089349,"user_tz":-240,"elapsed":474,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"46699b93-ad20-4710-ae03-6de283eb11ef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1000 491 0.509\n"]}]},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","correct_answer = float(answers[3])\n","\n","try:\n","    assert churn_29 == correct_answer\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"cellView":"form","id":"14KnR1gD0ou9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747121093776,"user_tz":-240,"elapsed":8,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"e86becba-18f7-4960-ea8c-465d893eb48b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]},{"cell_type":"markdown","source":["### **Посчитайте Mau, Wau, Dau за последний месяц/неделю/день записей**\n","\n","Сохраните результат в переменные `dec_mau`, `dec_wau`, `dec_dau` соответственно\n","\n","**Примечание:** последний месяц записей - декабрь. Поэтому `mau` рассчитываем для декабря (2021 года), для `wau` берем последнюю неделю - с 25 по 31 декабря, и для `dau` соответственно последний день - 31 декабря."],"metadata":{"id":"QuO3ZwRI5mdH"}},{"cell_type":"code","source":["# Ваше решение\n","import csv\n","from datetime import datetime as dt\n","from collections import defaultdict\n","dec_dates = defaultdict(int)\n","\n","with open('entries.csv', newline='\\n') as f:\n","  reader_f_entries = csv.DictReader(f, delimiter=';')\n","  for row in reader_f_entries:\n","    entry_date = dt.strptime(row['entry_date'][:10], '%Y-%m-%d').date()\n","    if entry_date.year == 2021 and entry_date.month == 12:\n","        ent_list = [[int(row['user_id'])] for row in reader_f_entries]\n","ent_list_unq = list(set(tuple(entry) for entry in ent_list))\n","\n","dec_mau = len(ent_list_unq)\n","\n","print(dec_mau)"],"metadata":{"id":"HxGWkaSp5kpo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747133439997,"user_tz":-240,"elapsed":151,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"f4f766ae-1b41-4981-8d13-93e158a5938e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["133\n"]}]},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","correct_answer = float(answers[4])\n","\n","try:\n","    assert dec_mau == correct_answer\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"cellView":"form","id":"dpK4clbe5xiH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747133444535,"user_tz":-240,"elapsed":23,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"fc573a9d-84c9-4746-ade6-d38ddc7e4224"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]},{"cell_type":"code","source":["# Ваше решение\n","import csv\n","from datetime import datetime as dt\n","from collections import defaultdict\n","dec_dates = defaultdict(int)\n","\n","with open('entries.csv', newline='\\n') as f:\n","  reader_f_entries = csv.DictReader(f, delimiter=';')\n","  for row in reader_f_entries:\n","    entry_date = dt.strptime(row['entry_date'][:10], '%Y-%m-%d').date()\n","    if entry_date.year == 2021 and entry_date.month == 12 and entry_date.day in (25, 26, 27, 28, 29, 30, 31):\n","        ent_list = [[int(row['user_id'])] for row in reader_f_entries]\n","ent_list_unq = list(set(tuple(entry) for entry in ent_list))\n","\n","dec_wau = len(ent_list_unq)\n","\n","print(dec_wau)"],"metadata":{"id":"urEWcCuk522y","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747133396560,"user_tz":-240,"elapsed":167,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"83de2742-fe2a-4c5b-8d53-c0eb7005a707"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["84\n"]}]},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","correct_answer = float(answers[5])\n","\n","try:\n","    assert dec_wau == correct_answer\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"cellView":"form","id":"xziXbjnJ549b","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747133399810,"user_tz":-240,"elapsed":8,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"eb5797c9-d9b7-4331-b97a-a240c413d6b3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]},{"cell_type":"code","source":["# Ваше решение\n","import csv\n","from datetime import datetime as dt\n","from collections import defaultdict\n","dec_dates = defaultdict(int)\n","\n","with open('entries.csv', newline='\\n') as f:\n","  reader_f_entries = csv.DictReader(f, delimiter=';')\n","  for row in reader_f_entries:\n","    if dt.strptime(row['entry_date'][:7], '%Y-%m').date() == dt.strptime('2021-12', '%Y-%m').date():\n","      ent_list = [[int(row['user_id']), dt.strptime(row['entry_date'][:10], '%Y-%m-%d').date()] for row in reader_f_entries]\n","ent_list_unq = list(set(tuple(entry) for entry in ent_list))\n","\n","for i in range(1,31):\n","  day = dt.strptime(f'2021-12-{i}', '%Y-%m-%d').date()\n","  for user_id, entry_date in ent_list_unq:\n","    if entry_date == day:\n","      dec_dates[day] += 1\n","\n","dec_dau = round(sum(dec_dates.values()) / len(dec_dates))\n","\n","print(dec_dau)"],"metadata":{"id":"hv7Nz3TN59Ds","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747131668683,"user_tz":-240,"elapsed":305,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"8fc45d6f-d4c0-4084-9daf-a6efc7561140"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["47\n"]}]},{"cell_type":"code","source":["import csv\n","from datetime import datetime as dt\n","from collections import defaultdict\n","dec_dates = defaultdict(int)\n","\n","with open('entries.csv', newline='\\n') as f:\n","  reader_f_entries = csv.DictReader(f, delimiter=';')\n","  for row in reader_f_entries:\n","    if dt.strptime(row['entry_date'][:10], '%Y-%m-%d').date() == dt.strptime('2021-12-31', '%Y-%m-%d').date():\n","      ent_list = [[int(row['user_id'])] for row in reader_f_entries]\n","ent_list_unq = list(set(tuple(entry) for entry in ent_list))\n","\n","dec_dau = len(ent_list_unq)\n","\n","print(dec_dau)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tMQmuIcnOk6-","executionInfo":{"status":"ok","timestamp":1747132905278,"user_tz":-240,"elapsed":510,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"afc50466-ea9c-43df-db05-0d9abe560f16"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["47\n"]}]},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","correct_answer = float(answers[6])\n","\n","try:\n","    assert dec_dau == correct_answer\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"cellView":"form","id":"1csOLxor5_ox","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747131674200,"user_tz":-240,"elapsed":13,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"32dcb655-2e5a-4c67-c357-268f6f35f557"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]},{"cell_type":"markdown","source":["### **Посчитайте Mau, Wau, Dau усредненные**\n","\n","Сохраните результат в переменные `avg_mau`, `avg_wau`, `avg_dau` соответственно\n","\n","**Примечание:** результаты округлите до 5 знаков после запятой"],"metadata":{"id":"gzElxXgv6Dyr"}},{"cell_type":"code","source":["# Ваше решение\n","import csv\n","from datetime import datetime as dt\n","from collections import defaultdict\n","\n","months = defaultdict(set)  # Use a set to store unique entries for each month\n","\n","with open('entries.csv', newline='\\n') as f:\n","    reader_f_entries = csv.DictReader(f, delimiter=';')\n","    for row in reader_f_entries:\n","        entry_date = dt.strptime(row['entry_date'][:10], '%Y-%m-%d').date()\n","        month = entry_date.month  # Extract the month\n","        user_id = int(row['user_id'])  # Extract the user ID\n","        months[month].add(user_id)  # Add user ID to the set for the month\n","\n","# Convert sets to counts to get the final dictionary\n","months_count = {month: len(user_ids) for month, user_ids in months.items()}\n","avg_mau = round(sum(months_count.values()) / len(months_count), 5)\n","print(avg_mau)"],"metadata":{"id":"mUDYPPqx6RPr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747134299671,"user_tz":-240,"elapsed":157,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"15ef4347-055d-49be-d90f-90edff0c9769"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["102.58333\n"]}]},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","correct_answer = float(answers[7])\n","\n","try:\n","    assert avg_mau == correct_answer\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"cellView":"form","id":"CfikZaBu6V9_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747134306943,"user_tz":-240,"elapsed":7,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"3100cb65-731c-4710-ede8-0f6b120f878b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]},{"cell_type":"code","source":["# Ваше решение\n","import csv\n","from datetime import datetime as dt\n","from collections import defaultdict\n","\n","weeks = defaultdict(set)  # Use a set to store unique entries for each week\n","\n","with open('entries.csv', newline='\\n') as f:\n","    reader_f_entries = csv.DictReader(f, delimiter=';')\n","    for row in reader_f_entries:\n","        entry_date = dt.strptime(row['entry_date'][:10], '%Y-%m-%d').date()\n","        week = entry_date.isocalendar() [1]  # Extract the week number\n","        user_id = int(row['user_id'])  # Extract the user ID\n","        weeks[week].add(user_id)  # Add user ID to the set for the week\n","\n","# Convert sets to counts to get the final dictionary\n","week_count = {week: len(user_ids) for week, user_ids in weeks.items()}\n","avg_wau = round(sum(week_count.values()) / len(week_count), 5)\n","print(avg_wau)"],"metadata":{"id":"WydV9g9C6x7O","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747134675017,"user_tz":-240,"elapsed":203,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"883722fa-7438-4796-d6ad-5353b44d069e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["89.86792\n"]}]},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","correct_answer = float(answers[8])\n","\n","try:\n","    assert avg_wau == correct_answer\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"cellView":"form","id":"qbZgzDpV6zUl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747134680484,"user_tz":-240,"elapsed":5,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"21d2f56c-5141-4e4c-a0eb-801d16b9b9ee"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]},{"cell_type":"code","source":["# Ваше решение\n","import csv\n","from datetime import datetime as dt\n","from collections import defaultdict\n","\n","days = defaultdict(set)  # Use a set to store unique entries for each day\n","\n","with open('entries.csv', newline='\\n') as f:\n","    reader_f_entries = csv.DictReader(f, delimiter=';')\n","    for row in reader_f_entries:\n","        entry_date = dt.strptime(row['entry_date'][:10], '%Y-%m-%d').date()\n","        user_id = int(row['user_id'])  # Extract the user ID\n","        days[entry_date].add(user_id)  # Add user ID to the set for the day\n","\n","# Convert sets to counts to get the final dictionary\n","day_count = {entry_date: len(user_ids) for entry_date, user_ids in days.items()}\n","avg_dau = round(sum(day_count.values()) / 365, 5)\n","print(avg_dau)"],"metadata":{"id":"NgqOR38d64_T","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747135059114,"user_tz":-240,"elapsed":148,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"64029a8e-74b8-49d5-de44-709e81b5d3dd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["40.5589\n"]}]},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","correct_answer = float(answers[9])\n","\n","try:\n","    assert avg_dau == correct_answer\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"id":"TbmDR4NP66qm","cellView":"form","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747135071849,"user_tz":-240,"elapsed":5,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"9a449cfd-22a5-44ce-f3c5-4c350d3096c0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]}]}
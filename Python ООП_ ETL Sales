{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1S8wPY11tMObAjUASNQyVJYJuBFQ5e7Qv","timestamp":1748859330795},{"file_id":"11n0i-MezlCnVIRHY4UsPDC1Wiv-4Wso9","timestamp":1688353661033},{"file_id":"1XvUr4thqwMBmrW-5_ZNS-lXFFOYLUS2f","timestamp":1682611812659}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## **1 кейс**\n","\n","**ETL продажи**"],"metadata":{"id":"XUqCUBW5fUST"}},{"cell_type":"markdown","source":["**Задача**\n","\n","Обычный интернет-магазин хочет улучшить процесс принятия data-driven решений. Для этого они хотят собирать данные о продажах так, чтобы каждая продажа была своеобразным объектом. С которым, в дальнейшем, будет настроено удобное взаимодействие, то есть обработка, анализ и что угодно, что им в будущем может понадобиться.\n","\n","Но пока задача минимум: собрать данные, сформировать продажи, задать базовую аналитику, выгрузить.\n","\n","Говоря техническим языком, вам необходимо разработать систему, которая будет обрабатывать данные о продажах в интернет-магазине. Система должна осуществлять извлечение данных из различных источников, преобразование этих данных для удобного анализа и загрузку обработанных данных в целевую систему.\n","\n","**Этапы**\n","\n","Создайте **класс \"Extraction\"** (Извлечение):\n","\n","Реализуйте метод from_csv(file_path) для извлечения данных из CSV-файла.\n","Метод from_csv() должен возвращать полученные данные в виде списка объектов продаж.\n","\n","Создайте **класс \"Sale\"** (Продажа):\n","\n","Каждая продажа должна иметь атрибуты, такие как id (идентификатор), date (дата продажи), amount (сумма продажи) и сам товар product (название).\n","\n","Реализуйте геттеры и сеттеры (get_id, get_date и тд) для доступа к атрибутам продажи.\n","\n","Создайте **класс \"Transformation\"** (Преобразование):\n","\n","Реализуйте методы для фильтрации данных о продажах по заданным критериям, например, по дате (filter_by_date) и сумме продажи (filter_by_amount).\n","filter_by_date должен принимать start_date и end_date и возвращать только те, продажи, которые попали в этот промежуток.\n","filter_by_amount должен принимать min_amount и max_amount и возвращать только те, продажи, которые по сумме покупки попали в этот промежуток.\n","Методы должны возвращать отфильтрованные данные в виде списка объектов \"Продажа\".\n","\n","Создайте **класс \"Loading\"** (Загрузка):\n","\n","Реализуйте метод to_csv(sales_data, file_path) для сохранения обработанных данных в формате CSV.\n","\n","Создайте **дочерний класс \"Analysis\"** (Анализ):\n","\n","В классе Analysis реализуйте методы для подсчета общей суммы продаж (calculate_total_sales), вычисления средней суммы продажи (calculate_average_sales). Результаты округлите до двух знаков после запятой."],"metadata":{"id":"IbxZMRPCXtTp"}},{"cell_type":"markdown","source":["**Важно**\n","\n","Перед началом решения выполните следующую ячейку, чтобы загрузить необходимый для работы файл."],"metadata":{"id":"OcK9kF9mfZIt"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"KtNBw8nOfPsB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1748862496761,"user_tz":-240,"elapsed":428,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"500c2b0e-4cb0-4d91-ddce-76dee5e58cdc"},"outputs":[{"output_type":"stream","name":"stdout","text":["--2025-06-02 11:08:16--  https://gist.github.com/Vs8th/c1550e322588b735752bf2a7ccd1cdd0/raw/sales_data.csv\n","Resolving gist.github.com (gist.github.com)... 140.82.114.4\n","Connecting to gist.github.com (gist.github.com)|140.82.114.4|:443... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: https://gist.githubusercontent.com/Vs8th/c1550e322588b735752bf2a7ccd1cdd0/raw/sales_data.csv [following]\n","--2025-06-02 11:08:16--  https://gist.githubusercontent.com/Vs8th/c1550e322588b735752bf2a7ccd1cdd0/raw/sales_data.csv\n","Resolving gist.githubusercontent.com (gist.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n","Connecting to gist.githubusercontent.com (gist.githubusercontent.com)|185.199.108.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 31844 (31K) [text/plain]\n","Saving to: ‘sales_data.csv’\n","\n","sales_data.csv      100%[===================>]  31.10K  --.-KB/s    in 0.01s   \n","\n","2025-06-02 11:08:16 (3.15 MB/s) - ‘sales_data.csv’ saved [31844/31844]\n","\n"]}],"source":["!wget https://gist.github.com/Vs8th/c1550e322588b735752bf2a7ccd1cdd0/raw/sales_data.csv"]},{"cell_type":"markdown","source":["Чтобы посмотреть как он выглядит выполните следующую ячейку."],"metadata":{"id":"JIwIK2E5fcyA"}},{"cell_type":"code","source":["import pandas as pd\n","\n","df = pd.read_csv('sales_data.csv')\n","df"],"metadata":{"id":"6f84pObFfbGE","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1748862498265,"user_tz":-240,"elapsed":1501,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"9f37dd83-56c4-407c-8fe4-8f53b4962087"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       id        date  amount    product\n","0       1  2023-04-25   35.21  Product 6\n","1       2  2022-08-31  359.19  Product 9\n","2       3  2023-01-22  117.53  Product 5\n","3       4  2022-12-15  366.68  Product 4\n","4       5  2023-03-06  628.65  Product 2\n","..    ...         ...     ...        ...\n","995   996  2022-07-10  653.66  Product 3\n","996   997  2023-01-13  691.89  Product 3\n","997   998  2023-01-31  207.24  Product 1\n","998   999  2023-01-16  653.59  Product 2\n","999  1000  2023-06-20  448.11  Product 3\n","\n","[1000 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-a407bfdc-2ab9-4d8b-9923-1e7aab9a9278\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>date</th>\n","      <th>amount</th>\n","      <th>product</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2023-04-25</td>\n","      <td>35.21</td>\n","      <td>Product 6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2022-08-31</td>\n","      <td>359.19</td>\n","      <td>Product 9</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2023-01-22</td>\n","      <td>117.53</td>\n","      <td>Product 5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2022-12-15</td>\n","      <td>366.68</td>\n","      <td>Product 4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>2023-03-06</td>\n","      <td>628.65</td>\n","      <td>Product 2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>996</td>\n","      <td>2022-07-10</td>\n","      <td>653.66</td>\n","      <td>Product 3</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>997</td>\n","      <td>2023-01-13</td>\n","      <td>691.89</td>\n","      <td>Product 3</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>998</td>\n","      <td>2023-01-31</td>\n","      <td>207.24</td>\n","      <td>Product 1</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>999</td>\n","      <td>2023-01-16</td>\n","      <td>653.59</td>\n","      <td>Product 2</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>1000</td>\n","      <td>2023-06-20</td>\n","      <td>448.11</td>\n","      <td>Product 3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a407bfdc-2ab9-4d8b-9923-1e7aab9a9278')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a407bfdc-2ab9-4d8b-9923-1e7aab9a9278 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a407bfdc-2ab9-4d8b-9923-1e7aab9a9278');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-125882c0-d818-4232-857f-163417b7b454\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-125882c0-d818-4232-857f-163417b7b454')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-125882c0-d818-4232-857f-163417b7b454 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_d2ba3f32-744e-4042-b3ba-875ab5b7ea76\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d2ba3f32-744e-4042-b3ba-875ab5b7ea76 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288,\n        \"min\": 1,\n        \"max\": 1000,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          522,\n          738,\n          741\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 336,\n        \"samples\": [\n          \"2023-07-01\",\n          \"2023-02-15\",\n          \"2023-05-06\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 281.5513498462036,\n        \"min\": 13.44,\n        \"max\": 999.68,\n        \"num_unique_values\": 993,\n        \"samples\": [\n          702.87,\n          267.45,\n          429.57\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Product 10\",\n          \"Product 9\",\n          \"Product 3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["### **Решения**"],"metadata":{"id":"CxmnD3GvffQ4"}},{"cell_type":"markdown","source":["#### **Задача 1**\n","\n","Ваша задача написать класс `Extraction`, и определить в нем метод `from_csv`, который принимал бы путь к файлу и вытаскивал данные в виде списка объектов.\n","\n","Для этого, здесь же, определите класс `Sale`."],"metadata":{"id":"5bdLXu2ksLB7"}},{"cell_type":"markdown","source":["**Решение**\n","\n","Напишите свое решение ниже"],"metadata":{"id":"qUL4LtIUnJge"}},{"cell_type":"code","source":["class Extraction:\n","\n","  def __init__(self, path):\n","    self.path = path\n","  @classmethod\n","  def from_csv(cls, path):\n","    data = []\n","    with open(path, 'r') as file:\n","      lines = file.readlines()\n","      for line in lines[1:]:\n","        id, date, amount, product = line.strip().split(',')\n","        sale_obj = Sale(id, date, float(amount), product)\n","        data.append(sale_obj)\n","    return data\n","class Sale:\n","  def __init__(self, id, date, amount, product):\n","    self._id = id\n","    self._date = date\n","    self._amount = amount\n","    self._product = product\n","\n","  def get_id(self):\n","    return self._id\n","  def set_id(self, new_id):\n","    self._id = new_id\n","  def get_date(self):\n","    return self._date\n","  def set_date(self, new_date):\n","    self._date = new_date\n","  def get_amount(self):\n","    return self._amount\n","  def set_amount(self, new_amount):\n","    self._amount = new_amount\n","  def get_product(self):\n","    return self._product\n","  def set_product(self, new_product):\n","    self._product = new_product"],"metadata":{"id":"Ia39hhmZbNRW"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["✏️ ✏️ ✏️\n","\n","**Проверка**\n","\n","Чтобы проверить свое решение, запустите код в следующих ячейках"],"metadata":{"id":"54Tvpn9OkDwV"}},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","a = Extraction.from_csv('sales_data.csv')\n","res = []\n","for i in a[5:105:25]:\n","  id = i.get_id()\n","  date = i.get_date()\n","  amount = i.get_amount()\n","  product = i.get_product()\n","  res.append((id, date, amount, product))\n","\n","try:\n","    assert res == [('6', '2022-08-04', 843.69, 'Product 3'),\n","                   ('31', '2022-11-06', 131.6, 'Product 8'),\n","                   ('56', '2023-06-24', 747.08, 'Product 8'),\n","                   ('81', '2023-05-09', 658.02, 'Product 10')]\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"id":"LkqzVw9skKEC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1748863795325,"user_tz":-240,"elapsed":10,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"ec76ee50-4a1d-4033-c65f-71ce3c4d9b8e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]},{"cell_type":"markdown","source":["#### **Задача 2**\n","\n","Напишите класс `Transformation`, который содержит два метода: `filter_by_date(sales_data, start_date, end_date)` и `filter_by_amount(sales_data, min_amount, max_amount)`."],"metadata":{"id":"QLNMvvhXoIdV"}},{"cell_type":"markdown","source":["**Решение**\n","\n","Напишите свое решение ниже"],"metadata":{"id":"LThhpSINoMHN"}},{"cell_type":"code","source":["class Transformation:\n","  def __init__(self, sales_data):\n","    self.sales_data = sales_data\n","  @classmethod\n","  def filter_by_date(cls, sales_data, start_date, end_date):\n","    filtered_sales = []\n","    for sale in sales_data:\n","      if start_date <= sale.get_date() <= end_date:\n","        filtered_sales.append(sale)\n","    return filtered_sales\n","\n","  @classmethod\n","  def filter_by_amount(cls, sales_data, min_amount, max_amount):\n","    filtered_sales = []\n","    for sale in sales_data:\n","      if min_amount <= sale.get_amount() <= max_amount:\n","        filtered_sales.append(sale)\n","    return filtered_sales"],"metadata":{"id":"9s8JBMlboJuf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["✏️ ✏️ ✏️\n","\n","**Проверка**\n","\n","Чтобы проверить свое решение, запустите код в следующих ячейках"],"metadata":{"id":"GN_PNZICsxRD"}},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","sales_data = Extraction.from_csv('sales_data.csv')\n","filtered_sales1 = Transformation.filter_by_date(sales_data, '2023-01-01', '2023-06-30')\n","res2 = []\n","for i in filtered_sales1[5:105:36]:\n","  id = i.get_id()\n","  date = i.get_date()\n","  amount = i.get_amount()\n","  product = i.get_product()\n","  res2.append((id, date, amount, product))\n","\n","try:\n","    assert res2 == [('10', '2023-02-04', 530.21, 'Product 1'),\n","                    ('97', '2023-03-16', 518.75, 'Product 8'),\n","                    ('163', '2023-06-12', 706.27, 'Product 9')]\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a36bM9j9tD7l","executionInfo":{"status":"ok","timestamp":1748864184304,"user_tz":-240,"elapsed":16,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"1aa4794c-1aca-45ca-95bf-f372e2a16c1a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","sales_data = Extraction.from_csv('sales_data.csv')\n","filtered_sales2 = Transformation.filter_by_amount(filtered_sales1, 100, 1000)\n","res3 = []\n","for i in filtered_sales2[5:105:36]:\n","  id = i.get_id()\n","  date = i.get_date()\n","  amount = i.get_amount()\n","  product = i.get_product()\n","  res3.append((id, date, amount, product))\n","\n","try:\n","    assert res3 == [('11', '2023-01-04', 974.04, 'Product 10'),\n","                    ('104', '2023-06-19', 680.99, 'Product 9'),\n","                    ('178', '2023-01-28', 417.43, 'Product 7')]\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"khbNXvlDyYAT","executionInfo":{"status":"ok","timestamp":1748864699535,"user_tz":-240,"elapsed":13,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"3c64ea05-543f-4d82-fef9-b185daa94747"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]},{"cell_type":"markdown","source":["#### **Задача 3**\n","\n","Напишите класс `Analysis`, содержащий два метода: `calculate_total_sales` и `calculate_average_sales`. Возвращаемые значения округлите до двух знаков после запятой."],"metadata":{"id":"AwB-HtPLtjyl"}},{"cell_type":"markdown","source":["**Решение**\n","\n","Напишите свое решение ниже"],"metadata":{"id":"GOTB--hmt2xw"}},{"cell_type":"code","source":["class Analysis:\n","  def __init__(self, sales_data):\n","    self.sales_data = sales_data\n","  @classmethod\n","  def calculate_total_sales(cls, sales_data):\n","    total_sales = 0\n","    for sale in sales_data:\n","      total_sales += sale.get_amount()\n","    return round(total_sales, 2)\n","\n","  @classmethod\n","  def calculate_average_sales(cls, sales_data):\n","    total_sales = 0\n","    count = 0\n","    for sale in sales_data:\n","      total_sales += sale.get_amount()\n","      count += 1\n","    average_sales = total_sales / count\n","    return round(average_sales, 2)"],"metadata":{"id":"fz7nRb_ntKMv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["✏️ ✏️ ✏️\n","\n","**Проверка**\n","\n","Чтобы проверить свое решение, запустите код в следующих ячейках"],"metadata":{"id":"0-7TiI06t8D0"}},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","res4 = round(Analysis.calculate_total_sales(sales_data), 2)\n","\n","try:\n","    assert res4 == 522581.97\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KzV-hUKcvxb2","executionInfo":{"status":"ok","timestamp":1748864647205,"user_tz":-240,"elapsed":18,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"1a9b9b71-4fba-4f5f-cd36-1375ff6ada93"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"pi8WUukMcImf"}},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","res5 = round(Analysis.calculate_average_sales(sales_data), 2)\n","\n","try:\n","    assert res5 == 522.58\n","except AssertionError:\n","    print('Ответы не совпадают')\n","else:\n","    print('Поздравляем, Вы справились!')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Pk17zzBzsDn","executionInfo":{"status":"ok","timestamp":1748864649125,"user_tz":-240,"elapsed":24,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"155f5940-e94b-459c-d85a-83a3e24917d5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились!\n"]}]},{"cell_type":"markdown","source":["#### **Задача 4**\n","\n","Напишите класс `Loading` с методом `to_csv(sales_data, file_path)`, который запишет данные в `csv` файл."],"metadata":{"id":"CgRs9f--z9N-"}},{"cell_type":"markdown","source":["**Решение**\n","\n","Напишите свое решение ниже"],"metadata":{"id":"HAC66WJB0DtG"}},{"cell_type":"code","source":["class Loading:\n","  def __init__(self,sales_data, file_path):\n","    self.sales_data = sales_data\n","    self.file_path = file_path\n","\n","  @classmethod\n","  def to_csv(cls, sales_data, file_path):\n","    with open(file_path, 'w') as file:\n","      file.write('id,date,amount,product\\n')\n","      for sale in sales_data:\n","        file.write(f'{sale.get_id()},{sale.get_date()},{sale.get_amount()},{sale.get_product()}\\n')\n"],"metadata":{"id":"63tUPEeLz5e1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["✏️ ✏️ ✏️\n","\n","**Проверка**\n","\n","Чтобы проверить свое решение, запустите код в следующих ячейках"],"metadata":{"id":"wAeUY7ey0JGJ"}},{"cell_type":"code","source":["Loading.to_csv(filtered_sales2, 'filtered_sales.csv')"],"metadata":{"id":"BbYGpfJ40HC9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Здесь будет скачиваться файл с эталонным ответом\n","\n","!wget https://gist.github.com/Vs8th/533f827cc337efe288a5064604fe4e56/raw/filtered_sales_cor.csv\n","\n","import pandas as pd\n","\n","user_answer = pd.read_csv('filtered_sales.csv')\n","correct_answer = pd.read_csv('filtered_sales_cor.csv')"],"metadata":{"id":"nArXJ0ax1F09","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1748864716118,"user_tz":-240,"elapsed":418,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"cd43b9e5-3efa-4c49-c70e-f32dee998170"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["--2025-06-02 11:45:15--  https://gist.github.com/Vs8th/533f827cc337efe288a5064604fe4e56/raw/filtered_sales_cor.csv\n","Resolving gist.github.com (gist.github.com)... 140.82.114.3\n","Connecting to gist.github.com (gist.github.com)|140.82.114.3|:443... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: https://gist.githubusercontent.com/Vs8th/533f827cc337efe288a5064604fe4e56/raw/filtered_sales_cor.csv [following]\n","--2025-06-02 11:45:15--  https://gist.githubusercontent.com/Vs8th/533f827cc337efe288a5064604fe4e56/raw/filtered_sales_cor.csv\n","Resolving gist.githubusercontent.com (gist.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n","Connecting to gist.githubusercontent.com (gist.githubusercontent.com)|185.199.108.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 14847 (14K) [text/plain]\n","Saving to: ‘filtered_sales_cor.csv’\n","\n","filtered_sales_cor. 100%[===================>]  14.50K  --.-KB/s    in 0.001s  \n","\n","2025-06-02 11:45:16 (12.0 MB/s) - ‘filtered_sales_cor.csv’ saved [14847/14847]\n","\n"]}]},{"cell_type":"code","source":["#@title ✏️ Проверка: чтобы проверить свое решение запустите код в этой ячейке\n","try:\n","  assert (user_answer == correct_answer).all().all(), 'Ответы не совпадают'\n","  assert user_answer.columns.equals(correct_answer.columns), 'Названия столбцов не совпадают'\n","except Exception as err:\n","  raise AssertionError(f'При проверке возникла ошибка {repr(err)}')\n","else:\n","  print('Поздравляем, Вы справились и успешно прошли все проверки!')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e2nVbdAn1IjH","executionInfo":{"status":"ok","timestamp":1748864722419,"user_tz":-240,"elapsed":16,"user":{"displayName":"Tatiana Agafonova","userId":"13592500017738086408"}},"outputId":"e2d87eab-0dd1-4e7e-ff9d-5a836364a162","cellView":"form"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Поздравляем, Вы справились и успешно прошли все проверки!\n"]}]}]}